#
# This playbook manages all "machine types" for Percona Training
#

- hosts: all
  gather_facts: no
  roles:
    - common

- hosts: node1
  gather_facts: no
  roles:
    - minikube

# This should only match "db1" hosts to set up my-movies
- hosts: db1
  gather_facts: no
  roles:
    - mysql
    - sysbench
  tasks:

  - name: Install Percona Repo, nano, screen
    yum:
      state: latest
      name: ['http://repo.percona.com/yum/percona-release-latest.noarch.rpm']

  - name: install git, httpd, php, mydumper
    yum:
      name: ['httpd', 'php', 'php-mysql', 'mysql-utilities', 'openssl', 'https://github.com/maxbube/mydumper/releases/download/v0.9.5/mydumper-0.9.5-2.el7.x86_64.rpm', 'pmm-client', 'nc']
      state: installed

  - name: clone my-movies repo
    git:
      repo: https://github.com/percona/training-mymovies
      dest: /var/www/html
      update: no

  - name: start httpd
    service: name=httpd state=stopped

  - name: Download zip codes
    unarchive:
      src: https://simplemaps.com/static/data/us-zips/1.5/basic/simplemaps_uszips_basicv1.5.zip
      dest: /home/centos/
      remote_src: yes

# This should only match "db2" hosts to remove everything in
# preparation for setting up a slave
- hosts: db2
  gather_facts: no
  roles:
    - mysql
    - sysbench
  tasks:

  - name: check for existing setup
    stat: path=/var/lib/mysql/xtrabackup_binlog_info
    register: existing_setup

  - name: disable mysql
    service: name=mysql state=stopped
    ignore_errors: yes
    when: not existing_setup.stat.exists

  - name: remove percona packages
    yum:
      name: ['percona-server-*', 'percona-*']
      state: removed
    when: not existing_setup.stat.exists

  - name: move back my.cnf
    copy: remote_src=True src=/etc/my.cnf.rpmsave dest=/etc/my.cnf

  - name: update toolkit.cnf
    blockinfile:
      dest: /etc/percona-toolkit/pt-show-grants.conf
      create: yes
      block: |
       user=toolkit
       password=T00lkit1$

# Setup the scoreboard for my-movies
- hosts: scoreboard
  gather_facts: no
  roles:
    - scoreboard

# Setup PXC/GR "app" node with sysbench, scripts, proxysql, and mysqlrouter
- hosts: app
  gather_facts: no
  roles:
    - sysbench
  tasks:

  - name: Install Percona Repo
    yum:
      state: latest
      name:
        - http://repo.percona.com/yum/percona-release-latest.noarch.rpm

  - name: Install Percona client, libs, proxysql2, router, pmm2-client
    yum:
      state: latest
      name:
        - percona-server-client
        - percona-server-shared
        - percona-mysql-router
        - pmm2-client
        - proxysql2

  - name: Remove Percona Server
    yum:
      state: absent
      name: percona-server-server

## Settings for PXC/GR tutorial
- hosts: mysql1:mysql2:mysql3
  gather_facts: no
  roles:
    - mysql
    - sysbench
  tasks:

  - name: Install Percona Repo
    yum:
      state: latest
      name:
        - http://repo.percona.com/yum/percona-release-latest.noarch.rpm

  - name: Install Percona Server/Client
    yum:
      state: latest
      name:
        - percona-server-server
        - percona-server-client
        - percona-toolkit
        - pmm2-client
        - percona-xtrabackup-80

  - name: Update mysqld /etc/my.cnf Parameters
    tags: update_mycnf
    register: mysqldconfig
    ini_file:
      path: /etc/my.cnf
      section: "{{ item.section }}"
      option: "{{ item.param }}"
      value: "{{ item.value }}"
      state: "{{ item.state }}"
    with_items:
      - { section: "mysqld", param: "server_id", value: "{{ 101 |random(start=2, seed=inventory_hostname) }}", state: "present" }
      - { section: "mysql", param: "prompt", value: "\"{{inventory_hostname}} mysql> \"", state: "present" }

  - name: Restart mysql
    tags: update_mycnf
    service: name=mysql state=restarted enabled=yes
    when: (mysqldconfig is changed)

# For PXC tutorial, on mysql1, create replication user to set up initial labs
- hosts: mysql1
  gather_facts: no
  tasks:

  - name: Create repl user
    shell: >
      mysql -uroot -e "CREATE USER IF NOT EXISTS 'repl'@'10.%' IDENTIFIED BY 'R3plica1234#';
      GRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO 'repl'@'10.%';"

  - name: Copy proxysql GR views
    copy:
      src: roles/gr/files/proxysql_gr.sql
      dest: /home/centos/proxysql_gr.sql

# For PXC/GR tutorial, connect replication
- hosts: mysql2:mysql3
  gather_facts: no
  roles:
    - mysql
  tasks:
  - name: Connect Async Replication
    tags: connect_replication
    shell: >
      mysql -uroot -e "STOP SLAVE; RESET SLAVE ALL;
      CHANGE MASTER TO MASTER_HOST='{{ hostvars[inventory_hostname]['mysql_master_host'] }}',
      MASTER_USER='repl', MASTER_PASSWORD='R3plica1234#',
      MASTER_LOG_FILE='mysqld-bin.000001', MASTER_LOG_POS=4, MASTER_SSL=1; START SLAVE;"

  - name: GROUP REPLICATION - Drop everything, reset master, purge binlogs
    shell: >
      mysql -uroot -e "STOP SLAVE; RESET SLAVE ALL;
      DROP DATABASE IF EXISTS imdb;
      DROP DATABASE IF EXISTS world;
      DROP DATABASE IF EXISTS sakila;
      DROP DATABASE IF EXISTS sysbench;
      FLUSH BINARY LOGS;
      RESET MASTER;"
    when: (gr == "Y" and 'mysql3' in inventory_hostname)

# For MongoDB exercises
- hosts: mongodb
  gather_facts: no
  tasks:

  - name: Stop default MongoDB instance
    service:
      name: mongod
      state: stopped
      enabled: false

  - name: Delete default MongoDB directory
    file:
      path: "/var/lib/mongo/"
      state: absent
